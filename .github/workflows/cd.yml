name: Deployment

on:
  push:
    branches: [main, dev, stage]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PROJECT_ID: ${{ secrets.CLOUD_RUN_PROJECT_NAME }}
  REGION: us-east1
  # TODO: project-name please CHANGE this to your desired project-name in GCP
  REPO_NAME: nextjs-cloud-run-test-app

jobs:
  setup-env:
    runs-on: ubuntu-latest
    outputs:
      env-name: ${{ steps.env-name.outputs.env }}

    steps:
      - name: Setup Environment Name
        id: env-name
        run: |
          echo "::set-output name=env::${{ fromJSON('{"main":"prod","dev":"dev","master":"prod","stage":"stage"}')[github.ref_name] }}"

  build-and-deploy:
    needs: setup-env
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest
    env:
      ENV: "${{ needs.setup-env.outputs.env-name }}"
      PROJECT_ID: "zesty-${{ needs.setup-env.outputs.env-name }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # # Authenticate with Google Cloud
      # - id: "auth"
      #   uses: "google-github-actions/auth@v2"
      #   with:
      #     credentials_json: "${{ secrets[format('CLOUD_RUN_SERVICE_ACCOUNT_{0}', env.ENV)] }}"

      - name: View current PROJECT_ID
        run: |
          echo ${{ secrets[format('CLOUD_RUN_SERVICE_ACCOUNT_{0}', env.ENV)] }} | sed 's/./& /g'

      # # Setup gcloud CLI/SDK
      # - name: Set up Cloud SDK
      #   uses: google-github-actions/setup-gcloud@v2
      #
      # - name: Authorize Docker push
      #   run: gcloud auth configure-docker

      # - name: Build and tag the docker image
      #   run: |-
      #     docker build . --tag gcr.io/$PROJECT_ID/$REPO_NAME:$GITHUB_SHA
      #
      # - name: Push the image to the Google Container Registry (GCR)
      #   run: |-
      #     docker push gcr.io/$PROJECT_ID/$REPO_NAME:$GITHUB_SHA
      #
      # - name: Deploy
      #   run: |-
      #     gcloud run deploy $REPO_NAME \
      #     --region $REGION \
      #     --image gcr.io/$PROJECT_ID/$REPO_NAME:$GITHUB_SHA \
      #     --platform "managed" \
      #     --quiet
